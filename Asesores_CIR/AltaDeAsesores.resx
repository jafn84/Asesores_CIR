<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxFoto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>